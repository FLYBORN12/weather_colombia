# 🌤️ Weather Data Pipeline

![Airflow](https://img.shields.io/badge/Airflow-2.0+-blue?logo=apache-airflow)  
![PostgreSQL](https://img.shields.io/badge/PostgreSQL-13+-blue?logo=postgresql)  
![PowerBI](https://img.shields.io/badge/PowerBI-Dashboard-yellow?logo=power-bi)  
![Docker](https://img.shields.io/badge/Docker-Enabled-blue?logo=docker)  
![GCP](https://img.shields.io/badge/GCP-Deployed-brightgreen?logo=google-cloud)  

## 📌 Descripción

Este proyecto implementa un **pipeline de datos del clima en Colombia** que:

1. **Scrapea datos meteorológicos** de fuentes públicas.  
2. **Orquesta el flujo** usando **Apache Airflow**.  
3. **Almacena la información** en una base de datos **PostgreSQL** desplegada en **Google Cloud Platform (GCP)**.  
4. **Visualiza los resultados** en un dashboard interactivo de **Power BI**.  

El objetivo es mostrar un flujo de trabajo completo de **Data Engineering + BI**, desde la extracción hasta la visualización.  

---

## ⚙️ Arquitectura

```mermaid
flowchart LR
    A[🌍 Scraping Clima] --> B[🌀 Airflow DAG]
    B --> C[(🐘 PostgreSQL en GCP)]
    C --> D[📊 Power BI Dashboard]
🚀 Tecnologías utilizadas
Python 🐍 → Web Scraping y procesamiento de datos (Pandas)

Apache Airflow 🌀 → Orquestación de tareas ETL

PostgreSQL 🐘 → Base de datos en la nube

Docker 🐳 → Contenerización del entorno

Google Cloud Platform (GCP) ☁️ → Infraestructura en la nube

Power BI 📊 → Visualización de datos



bash
Copy
Edit
git clone https://github.com/tuusuario/weather-pipeline.git
cd weather-pipeline
Construye los contenedores con Docker

bash
Copy
Edit
docker-compose up --build
Accede a Airflow en tu navegador

arduino
Copy
Edit
http://localhost:8080
Configura las variables de entorno en .env (ejemplo incluido en .env.example).

📊 Dashboard
El dashboard en Power BI permite:

📅 Filtrar por fecha/hora

🌡️ Analizar temperatura, humedad y presión

📍 Ver información segmentada por región


👨‍💻 Autor
Juan Hoyos
🔗 LinkedIn | GitHub
